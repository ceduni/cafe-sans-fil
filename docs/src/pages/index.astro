---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
// const BASE_URL = '/cafe-sans-fil/docs';

import contributors from '../data/contributors.json';

let cafes = []
try {
	const response = await fetch('https://cafesansfil-api.onrender.com/api/cafes/');
	cafes = await response.json();	
} catch (error) {
	console.log("List of cafes could not be loaded")
} 
---

<Layout title="Café sans-fil">
	<main>
		<header>
			<div class="logo-wrapper">
				<img class="logo" src={`logo.png`} height="60" alt="">
			</div>
	
			<ul class="bare-list cafes">
				{ cafes.map((cafe) => (
				<li class="cafe" style={{background: `url(${cafe['image_url']}) 100%/cover no-repeat;`}}>
					{cafe['name']}
				</li>
				))}
			</ul>
			
			<p class="intro">
				<strong>Café sans-fil</strong> est un <b>projet pilote</b> visant à <b>améliorer le service des cafés étudiants de l'UdeM</b>. 
				Les cafés étudiants donnent accès à un espace de socialisation et de la nourriture à prix abordable,
				enrichissant la vie de campus des étudiants. 
				Toutefois, l'infrastructure actuelle ne facilite pas l'accès à l'information et alourdit la gestion des cafés. <br>
				Nous proposons une plateforme commune facilitant la gestion des cafés, leur découverte, la communication de leurs
				produits et la prise de commande. 
			</p>
	
			<ul role="list" class="bare-list link-card-grid">
				<Card
					href="https://cafesansfil.onrender.com/"
					title="Application"
					preview=true
					body="Plongez dans l'univers des cafés étudiants de l'UdeM et passez une commande."
				/>
				<Card
					href="https://cafesansfil-api.onrender.com/docs"
					title="API"
					preview=true
					body="Intégrez votre application à l'API de Café sans-fil. Explorez la documentation."
				/>
				<Card
					href="https://github.com/ceduni/cafe-sans-fil"
					title="Répertoire"
					body="Suivez le développement du projet sur GitHub. Partagez vos suggestions."
				/>
				<!-- <Card
					href="https://astro.build/chat/"
					title="Community"
					body="Come say hi to our amazing Discord community. ❤️"
				/> -->
			</ul>
		</header>

		<section class="feature-section">
			<h2>Fonctionnalités</h2>
			<p>
				Café sans-fil est accessible au grand public et offrent des fonctionnalités particulières aux membres de l'UdeM (étudiant, employé, professeur, chercheur, etc.), 
				aux bénévoles des cafés (étudiants travaillant au café) et aux gérants des cafés.
			</p>

			<ul class="bare-list features">
				<li class="feature-group">
					<h3>Grand public</h3>
					<p>Café sans-fil permet à tous d'explorer et découvrir les cafés étudiants et ce qu'ils offrent.</p>
				</li>
	
				<li class="feature-group">
					<h3>Membre de l'UdeM</h3>
					<p>
						Café sans-fil permet aux membres de l'UdeM de placer des commandes pour ramassage, les
						permettant de gagner du temps.
					</p>
				</li>
	
				<li class="feature-group">
					<h3>Bénévole de café</h3>
					<p>
						Café sans-fil permet aux bénévoles de café de traiter les commandes reçues et modifier le menu de leur café.
					</p>
				</li>
	
				<li class="feature-group">
					<h3>Gérant de café</h3>
					<p>
						Café sans-fil permet aux gérants de café de gérer efficacement leur café et leur fournit des rapports de vente synthétisant l'activité du café.
					</p>
				</li>
			</ul>
		</section>

		<section class="contributor-section">
			<div class="content-wrapper">
				<h2 class="section-title">Développement</h2>
				<p class="section-intro">
					À l'automne, nous avons développé un prototype complet et fonctionnel de l'application. <br>
					Cette session, nous voulons valider le prototype et apporter les améliorations nécessaires en vue d'une première version publique.
				</p>

				<h3>Contributeurs</h3>
				<ul class="bare-list contributors">
					{contributors.map((contributor) => (
					<li class="contributor">
						<img class="contributor-img" src={`${contributor.photo}`} alt={`Photo de ${contributor.name}`}>
						<h4 class="contributor-name">
							<a href={contributor.email}>{contributor.name}</a>
						</h4>
						<span class="contributor-role">{contributor.role}</span>
					</li>
					))}
				</ul>
				<a class="btn btn-email" href="mailto:louis.edouard.lafontant@umontreal.ca">
					Tu veux contribuer?
				</a> 
			</div>
		</section>

		<section class="specs-section hidden">
			<h2>Infrastructure</h2>
			<p>
				L'infrastructure de l'application est basée sur le FARM stack, comprenant FastAPI, React et MongoDB. Elle
				utilise MongoDB pour une gestion efficace des données, FastAPI pour traiter les requêtes et React pour offrir
				une interface utilisateur pour visualiser et interagir avec les données. L'API et le client web sont
				indépendants. L'API pourrait être utilisée par d'autres clients, comme une application mobile.
			</p>

			<h3>Base de données: MongoDB</h3>
			<p>
				<a href="https://www.mongodb.com/" target="_blank">MongoDB</a> est la base de données choisie pour stocker et
				gérer efficacement les données des cafés. Son modèle de données flexible basé sur des documents JSON
				facilite le stockage et la récupération des informations. Les opérations de lecture/écriture sont optimisées
				pour des performances élevées.
			</p>
			<p>
<strong>Gestion de la diversité des cafés:</strong> Les cafés de l'Université de Montréal présentent des caractérisPques 
uniques, avec des besoins et des offres variées. MongoDB, grâce à sa nature flexible, nous permet 
d'adapter facilement la base de données à la spécificité de chaque café. Contrairement aux bases de 
données relaPonnelles comme PostgreSQL, l'évoluPon de la structure de données est moins complexe 
avec MongoDB, ce qui facilite l'ajout ou la modificaPon des informaPons relaPves à chaque café. <br>
<strong>Scalabilité et évolutivité:</strong> En anPcipant l'évoluPon du projet et la possible extension à d'autres zones 
du campus ou même à d'autres universités, MongoDB offre une meilleure scalabilité. Ceee 
caractérisPque est essenPelle pour gérer efficacement l'augmentaPon du volume de données et le 
nombre croissant d'uPlisateurs.
				</p>

			<h3>API: FastAPI</h3>
			<p>
				<a href="https://fastapi.tiangolo.com/">FastAPI</a> est utilisé comme framework backend pour gérer les
				requêtes HTTP et les opérations liées à la base de données. Il offre une performance élevée grâce à la
				génération automatique de la documentation, une validation rapide des données et la prise en charge des
				spécifications OpenAPI.
			</p>
			<p>
				Popularité de Python : Envisageant que des étudiants de l'université pourraient éventuellement 
reprendre ou contribuer au projet, FastAPI présente l'avantage d'être facile à apprendre et à uPliser. 
Reposant sur Python, nous Prons profit de la popularité grandissant du langage3 et de l’apprenPssage
de Python assuré par le cours de programmaPon I (IFT1015). L'uPlisaPon de FastAPI, étroitement 
intégré avec Python, nous permet de Prer parP de ceee vaste communauté. Sa simplicité et sa clarté 
rendent le code plus accessible aux contributeurs potenPels, favorisant ainsi la conPnuité et 
l'évoluPvité du projet au sein de la communauté universitaire.
Performance élevée : FastAPI se démarque des autres framework Python tel que Flask par sa haute 
performance. Ceee performance est essenPelle pour gérer les requêtes en temps réel dans notre 
applicaPon, assurant une expérience uPlisateur fluide et réacPve.
2 h#ps://fastapi.5angolo.com/
3 Python est reconnu comme le langage le plus populaire selon un sondage de IEEE Spectrum (2023) : 
h#ps://spectrum.ieee.org/the-top-programming-languages-2023
Projet Café sans-fil Axel ZAREB et Southidej OUDANONH
9
Facilité de développement : FastAPI simplifie le développement grâce à sa facilité d'uPlisaPon et sa 
lisibilité. Il prend en charge la généraPon automaPque de documentaPon (avec Swagger UI et ReDoc), 
ce qui facilite la collaboraPon et la maintenance du code. Cela réduit le temps de développement et 
améliore l'efficacité de notre équipe.
</p>

			<h3>Application web: React+Tailwind</h3>
			<p>
				Front-end, l’applicaPon React a été iniPalisée avec 
Vite. C’est l’ouPl le plus répandu actuellement pour exécuter un serveur local de développement et 
compiler les fichiers JavaScript en un bundle qui sera déployé́ensuite en producPon.
Vite permet également le « hot-reloading », qui va recharger l’applicaPon web dynamiquement et 
instantanément à chaque changement dans le code, en foncPon de ce qui a été modifié. Cela permet 
de voir ses modificaPons en temps réel sans avoir à recharger l’ensemble de l’applicaPon à chaque 
fois
</p>
			<p>
				<a href="https://react.dev/" target="_blank">React</a> est utilisé pour créer l'interface utilisateur
				dynamique de l'application. Il permet de construire des composants réutilisables et offre un rendu efficace
				des vues basé sur la gestion de l'état, assurant une expérience utilisateur fluide et réactive. Nous
				l'utilisons couplé à <a href="https://tailwindcss.com/" target="_blank">Tailwind CSS</a>, un framework CSS
				open-source, pour faciliter le développement de l'interface utilisateur en équipe.
			</p>
			<p>
				Popularité : React est l'une des librairies JavaScript les plus populaires et largement uPlisées, souvent 
considéré comme le choix de facto pour le développement d’applicaPon web. Sa popularité assure un 
vaste écosystème de développeurs et une abondance de ressources d'apprenPssage, ce qui est 
essenPel pour la facilité de reprise et de contribuPon au projet par les étudiants et les développeurs 
futurs. Ceee popularité favorise la maintenance et l’évoluPon de l’applicaPon.
Développement de Single-Page Applica1ons (SPA) : Aujourd’hui la plupart des pePtes applicaPons 
web se développent sous forme de SPA qui évite le chargement d'une nouvelle page à chaque acPon 
demandée. React est parPculièrement efficace pour le développement de single-page applicaPons. 
Cela contribue à une expérience uPlisateur rapide et réacPve, un aspect crucial pour l'engagement des 
uPlisateurs de l'applicaPon Café sans-fil.
Modularité : Le cadre de travail en composants disPncts de React facilite la maintenance et l'évoluPon 
du code. Chaque composant encapsule sa propre logique, rendant les modificaPons et l'ajout de 
nouvelles foncPonnalités plus gérables et intuiPfs. Ceee structure modulaire permet une réuPlisaPon 
efficace du code et simplifie la tâche pour les futurs développeurs qui reprennent le projet.
</p>
<p>
	Collabora1on facile : TailwindCSS est conçu pour faciliter la collaboraPon et la reprise du code. Sa 
facilité de prise en main et sa popularité croissante en font un choix judicieux pour un projet où la 
maintenance et l'évoluPon du code sont des considéraPons clés. Avec TailwindCSS, les modificaPons 
sont plus prévisibles et moins suscepPbles de causer des effets indésirables sur d'autres parPes du 
projet, assurant ainsi une plus grande stabilité du code.
Léger et customisable : TailwindCSS adopte une approche uPlitaire, minimisant son empreinte dans le 
code, rendant l'applicaPon plus légère et performante. Contrairement à des frameworks plus 
génériques comme Bootstrap, TailwindCSS permet de créer des interfaces uniques propres aux besoins 
spécifiques de l’applicaPon, favorisant une bonne expérience uPlisateur
</p>

			<h3>Déploiement: Render</h3>
			<p>
				L'application est hébergée sur <b>Render</b>, une plateforme de cloud computing. Elle est accessible à
				l'adresse suivante:
				<a href="https://cafesansfil.onrender.com/" target="_blank">https://cafesansfil.onrender.com/</a>.
			</p>
		</section>
	</main>
</Layout>

<style>
	main {
		display: flex; flex-direction: column;
	}

	header {
		margin: auto;
		padding-top: 24px; padding-bottom: 60px;
		padding-left: 2vw; padding-right: 2vw;
		width: calc(100% - 2rem);
		max-width: 1000px;
		color: white;
		font-size: 1.4em;
		line-height: 1.5;
	}

	
	@media screen and (min-width: 54em) {
		header {
			font-size: 1.5em;
		}
	}

	.cafes {
		position: fixed;
		top: 0; left: 2rem; right: 2rem;
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		z-index: -1;
	}

	.cafe {
		display: flex; 
		margin: 6px;
		height: 120px;
		width: 180px;
		font-weight: 500; font-size: 1.3rem;
		border: 6px solid #fff;
		color: rgb(44, 94, 180);
		border-radius: 1px;
		opacity: 0.15;
	}
		
	.check:before {
		margin-left: 2px;
		margin-right: 4px; 
		font-weight: bold;
		content: '🗸'; 
	}

	.logo-wrapper {
		margin: 0 auto;
		padding: 12px;
		height: 180px; width: 180px;
		box-shadow: inset 0 2px 4px #555;
		background: linear-gradient(#f2f1f0, #fff);
		border-radius: 50%;
	}
		
		.logo {
			height: 100%;
			width: auto;
		}

	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	h2 {
		margin-top: 0; margin-bottom: 1em;
		font-size: 3rem; font-weight: 700;
		line-height: 1;
	}
	h3 {
		font-size: 2rem;
		font-weight: 800;
		line-height: 1;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.intro {
		margin-top: 24px;
		text-align: justify;
		text-shadow: 1px 1px 2px #000;
	}

	.intro strong {
		color: rgb(var(--accent-light));
	}

	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(30ch, 1fr));
		gap: 2rem;
		padding: 0;
	}

	.feature-section {
		position: relative;
		padding-top: 24px; padding-bottom: 30px;
		padding-left: 3vw; padding-right: 3vw;
		max-width: 1200px;
		color: #fff;
		overflow: hidden;
	}

	.feature-section > p {
		padding-right: 60px;
		font-size: 1.8rem;
		text-align: justify;
		line-height: 1.5;
	}

	.feature-section:after {
		content: "";
		position: absolute;
		top: 4vw; right: 4vw;
		width: 8vw; height: 8vw;
		max-width: 60px; max-height: 60px;
		border-radius: 50%;
		box-shadow:  0 0 0 2000px rgb(var(--accent));
		z-index: -1;
	}

	@media screen and (min-width: 54em) {
		.feature-section {
			padding-left: 5vw; padding-right: 5vw;
		}
	}

	@media screen and (min-width: 72em) {
		.feature-section {
			border-top-right-radius: 60px;
		}
	}

	.features {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(40ch, 1fr));
		gap: 1.5rem;
		padding: 0;
	}

	.feature-group {
		background-color: rgb(var(--accent-dark));
		padding: 12px 2rem 6px;
		border-radius: 12px;
	}
		.feature-group h3 {
			margin: 0;
		}

		.feature-group p {
			font-size: 1.6rem;
			line-height: 1.5;
		}
	
	.contributor-section {
		position: relative;
		overflow: hidden;
	}
	
	.contributor-section:before {
		content: "";
		position: absolute;
		bottom: 120px; right: 120px;
		width: 60px; height:  60px;
		border-radius: 50%;
		box-shadow: 0 0 0 20px rgb(var(--accent-red)), 0 0 40px #fff; 
		z-index: -1;
	}

	.contributor-section:after {
		content: "";
		position: absolute;
		bottom: -120px; right: -120px;
		width: 240px; height: 240px;
		border-radius: 50%;
		box-shadow: 0 0 0 40px rgb(var(--accent-dark)); 
		z-index: -1;
	}

	section .content-wrapper {
		position: relative;
		padding-top: 24px; padding-bottom: 30px;
		padding-left: 3vw; padding-right: 3vw;
		max-width: 1200px;
		background-color: #fbfbfb;
	}

	@media screen and (min-width: 54em) {
		section .content-wrapper {
			padding-left: 5vw; padding-right: 5vw;
		}
	}

	.section-intro {
		font-size: 1.7em;
		line-height: 1.5;
	}

	.contributors {
		display: flex;
	}

	.contributor {
		display: flex; flex-direction: column; align-items: flex-start;
		width: 200px;
		line-height: 1.35;
	}
		.contributor:not(:last-child) {
			margin-right: 4%;
		}

	.btn-email {
		display: block;
		margin: 24px auto 0;
		padding: 8px 12px; border-radius: 2px;
		width: 240px;
		font-size: 2rem; font-weight: 700;
		color: #fff;
		border-radius: 3px;
		background-color: rgb(var(--accent-red));
	}
		.btn-email:hover {
			background-color: #232425;
		}

	.contributor-img {
		height: auto;
		width: 100%;
		border-radius: 8px;
	}

	.contributor-name {
		margin-top: 0.5rem; margin-bottom: 0;
		font-weight: bold;
		font-size: 1.7rem;
		font-family: Consolas;
		letter-spacing: 0.3px;
		text-transform: capitalize;
		color: rgb(var(--accent-dark));
	}
		.contributor-name a {
			color: rgb(var(--accent-dark));
		}

	.contributor-role {
		font-weight: 500;
	}

	.contributor-work {
		font-size: 0.9em;
	}

	.specs-section {
		position: relative;
		padding-top: 24px;
		padding-left: 5%; padding-right: 5%;
		background: linear-gradient(#232425,  #232425e3);
		color: #f5f5f5;
	}
</style>
